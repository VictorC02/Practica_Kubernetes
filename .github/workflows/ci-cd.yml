name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ejecuta la acci√≥n al hacer push en la rama `main`

  pull_request:
    branches:
      - main  # Ejecuta las acciones al abrir un Pull Request hacia la rama `main`

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      ### 1. Checkout del repositorio ###
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      ### 2. Ejecutar Linter  ###
      - name: Run Linter
        uses: super-linter/super-linter@v6.6.0  
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true
          IGNORE_GENERATED_FILES: true
          IGNORE_GITIGNORED_FILES: true
          VALIDATE_ALL_CODEBASE: false

      ### 3. Login en el Container Registry ###
      - name: Login to GitHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # Configurar en GitHub Secrets
          password: ${{ secrets.GHCR_TOKEN }}  # Configurar en GitHub Secrets
      
      ### 4. Crear la imagen Docker ###
      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/victorc02/my-app:${{ github.sha }} ./app
          docker tag ghcr.io/victorc02/my-app:${{ github.sha }} ghcr.io/victorc02/my-app:latest

      ### 5. Push de la imagen al Container Registry ###
      - name: Push Docker Image
        run: |
          docker push ghcr.io/victorc02/my-app:${{ github.sha }}
          docker push ghcr.io/victorc02/my-app:latest

      ### 6. Ejecutar Pruebas  ###
      - name: Run Tests
        run: |
          chmod +x ./Scripts/test.sh
          ./Scripts/test.sh

      ## 7. Despliegue ###
      - name: Introductions to Set-Up
        run: |
          echo "Ir a Practica_Kubernetes/Scripts"
          echo "Ejecutar script init"
          echo "Ejecutar minikube service ingress-nginx-controller -n ingress-nginx"
